; This is the Calva evaluation results output window.
; TIPS: The keyboard shortcut `ctrl+alt+c o` shows and focuses this window
;   when connected to a REPL session.
; Please see https://calva.io/output/ for more info.
; Happy coding! ♥️

; Jacking in...
; Starting Jack-in Terminal: lein update-in :dependencies conj '[nrepl,"0.8.3"]' -- update-in :plugins conj '[cider/cider-nrepl,"0.26.0"]' -- update-in '[:repl-options,:nrepl-middleware]' conj '["cider.nrepl/cider-middleware"]' -- with-profile +dev repl :headless
; Hooking up nREPL sessions...
; Connected session: clj
; TIPS: 
;   - You can edit the contents here. Use it as a REPL if you like.
;   - `alt+enter` evaluates the current top level form.
;   - `ctrl+enter` evaluates the current form.
;   - `alt+up` and `alt+down` traverse up and down the REPL command history
;      when the cursor is after the last contents at the prompt
;   - Clojure lines in stack traces are peekable and clickable.
clj꞉muon-clj.core꞉>  ; Use `alt+enter` to evaluate
; Jack-in done.
clj꞉muon-clj.core꞉> (rest [1])
()
clj꞉muon-clj.core-test꞉> 
(def foo {:a 1 :b 2
          })
#'muon-clj.core-test/foo
clj꞉muon-clj.core-test꞉> 
(foo :a)
1
clj꞉muon-clj.core-test꞉> 
(foo :c)
nil
clj꞉muon-clj.core-test꞉> 
(unify [:pair [:var "a"] [:var "b"]] [:pair [:var "b"] [:int 1]] {})
; Syntax error compiling at (.calva/output-window/output.calva-repl:33:1).
; Unable to resolve symbol: unify in this context
clj꞉muon-clj.core-test꞉> 
